services:
  gateway:
    image: openjdk:17-alpine
    container_name: gateway
    hostname: gateway
    ports:
      - "8080:8080"
    volumes:
    - ./:/app
    working_dir: /app/gateway
    command: /app/gateway/mvnw spring-boot:run
    networks:
      - microservices-network

  authentication-service:
    image: openjdk:17-alpine
    container_name: authentication-service
    hostname: authentication-service
    ports:
      - "8081:8080"
    volumes:
    - ./:/app
    working_dir: /app/authentication-service
    command: /app/authentication-service/mvnw spring-boot:run
    depends_on:
      - authentication-db
    networks:
      - microservices-network

  policy-service:
    image: openjdk:17-alpine
    container_name: policy-service
    hostname: policy-service
    ports:
      - "8082:8080"
    volumes:
    - ./:/app
    working_dir: /app/insure-policy
    command: /app/insure-policy/mvnw spring-boot:run
    depends_on:
      - policy-db
      - authentication-service
    networks:
      - microservices-network

  purchase-service:
    image: openjdk:17-alpine
    container_name: purchase-service
    hostname: purchase-service
    ports:
      - "8083:8080"
    volumes:
    - ./:/app
    working_dir: /app/purchase-service
    command: /app/purchase-service/mvnw spring-boot:run
    depends_on:
      - purchase-db
      - authentication-service
      - purchase-redis
    networks:
      - microservices-network

  document-service:
    image: openjdk:17-alpine
    container_name: document-service
    hostname: document-service
    ports:
      - "8084:8080"
    volumes:
    - ./:/app
    working_dir: /app/document-service
    command: /app/document-service/mvnw spring-boot:run
    depends_on:
      - authentication-db
    networks:
      - microservices-network

  authentication-db:
    image: postgres:13-alpine
    container_name: authentication-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1
      POSTGRES_DB: authenticationdb
    volumes:
      - authentication_db_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  policy-db:
    image: postgres:13-alpine
    container_name: policy-db
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1
      POSTGRES_DB: policydb
    volumes:
      - policy_db_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  purchase-db:
    image: postgres:13-alpine
    container_name: purchase-db
    ports:
      - "5430:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1
      POSTGRES_DB: purchasedb
    volumes:
      - purchase_db_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ax@micro.kz
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "7313:80"
    depends_on:
      - authentication-db
      - policy-db
      - purchase-db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - microservices-network
  
  purchase-redis:
    image: redis:6.2.6-alpine
    container_name: purchase-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - ./purchase-service/src/main/resources/redis-data:/data
    networks:
      - microservices-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservices-network

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  authentication_db_data:
  policy_db_data:
  purchase_db_data:
  pgadmin_data:
